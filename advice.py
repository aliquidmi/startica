import random, logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters
from keyboards import get_main_keyboard

logger = logging.getLogger(__name__)

REPEAT_ADVICE_TEXT = "–©–µ –ø–æ—Ä–∞–¥–∞"

ADVICES = [
    "–ù–µ —á–µ–∫–∞–π —ñ–¥–µ–∞–ª—å–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç—É ‚Äî –≤—ñ–Ω –º–æ–∂–µ –Ω—ñ–∫–æ–ª–∏ –Ω–µ –Ω–∞—Å—Ç–∞—Ç–∏. –ü–æ—á–∏–Ω–∞–π –∑ —Ç–æ–≥–æ, —â–æ –º–∞—î—à, —ñ –≤–¥–æ—Å–∫–æ–Ω–∞–ª—é–π—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—ñ.",
    "–†–æ–±–∏ –ø–µ—Ä–µ—Ä–≤–∏ –∫–æ–∂–Ω—ñ 25-30 —Ö–≤–∏–ª–∏–Ω ‚Äî –º–æ–∑–æ–∫ –ø—Ä–∞—Ü—é—î –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–µ, –∫–æ–ª–∏ –º–∞—î –∑–º–æ–≥—É –≤—ñ–¥–ø–æ—á–∏—Ç–∏. –°–ø—Ä–æ–±—É–π —Ç–µ—Ö–Ω—ñ–∫—É –ü–æ–º–æ–¥–æ—Ä–æ.",
    "–°–∫–ª–∞–¥–∞–π —Å–ø–∏—Å–æ–∫ —Å–ø—Ä–∞–≤ –Ω–∞ –¥–µ–Ω—å ‚Äî —Ü–µ –¥–æ–ø–æ–º–æ–∂–µ —É–Ω–∏–∫–Ω—É—Ç–∏ –ø—Ä–æ–∫—Ä–∞—Å—Ç–∏–Ω–∞—Ü—ñ—ó —Ç–∞ —Ç—Ä–∏–º–∞—Ç–∏ —Ñ–æ–∫—É—Å –Ω–∞ –≤–∞–∂–ª–∏–≤–æ–º—É.",
    "–ù–µ –Ω–∞–º–∞–≥–∞–π—Å—è –≤–∏–≤—á–∏—Ç–∏ –≤—Å–µ –∑–∞ –æ–¥–∏–Ω –≤–µ—á—ñ—Ä ‚Äî —Ä–æ–∑–ø–æ–¥—ñ–ª—è–π –Ω–∞–≤—á–∞–Ω–Ω—è —Ä—ñ–≤–Ω–æ–º—ñ—Ä–Ω–æ, —ñ –∑–Ω–∞–Ω–Ω—è –∑–∞–∫—Ä—ñ–ø–ª—è—Ç—å—Å—è –∫—Ä–∞—â–µ.",
    "–°–ø–æ—á–∞—Ç–∫—É –≤–∏–∫–æ–Ω—É–π –Ω–∞–π—Å–∫–ª–∞–¥–Ω—ñ—à—ñ –∑–∞–≤–¥–∞–Ω–Ω—è ‚Äî —Ä–∞–Ω–∫–æ–≤–∞ –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü—ñ—è –¥–æ–ø–æ–º–∞–≥–∞—î –≤–ø–æ—Ä–∞—Ç–∏—Å—å —ñ–∑ –≤–∞–∂–∫–∏–º –Ω–∞–±–∞–≥–∞—Ç–æ —à–≤–∏–¥—à–µ.",
    "–ù–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂—É–π —Å–µ–±–µ ‚Äî –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–µ —Ä–æ–±–∏—Ç–∏ 2-3 –≤–∞–∂–ª–∏–≤—ñ —Å–ø—Ä–∞–≤–∏ –Ω–∞ –¥–µ–Ω—å, –Ω—ñ–∂ –Ω–∞–º–∞–≥–∞—Ç–∏—Å—è –≤—Å—Ç–∏–≥–Ω—É—Ç–∏ –≤—Å–µ –π –Ω—ñ—á–æ–≥–æ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç–∏.",
    "–í—á–∏—Å—è —Ä–æ–∑—É–º—ñ—Ç–∏, –∞ –Ω–µ –∑—É–±—Ä–∏—Ç–∏ ‚Äî –∑–Ω–∞–Ω–Ω—è, —è–∫—ñ —Ç–∏ –æ—Å–º–∏—Å–ª–∏–≤, –∑–∞–ª–∏—à–∞—Ç—å—Å—è –∑ —Ç–æ–±–æ—é –Ω–∞–¥–æ–≤–≥–æ.",
    "–ü–æ–≤—Ç–æ—Ä—é–π –º–∞—Ç–µ—Ä—ñ–∞–ª —á–µ—Ä–µ–∑ 1-2 –¥–Ω—ñ –ø—ñ—Å–ª—è –≤–∏–≤—á–µ–Ω–Ω—è ‚Äî —Ç–∞–∫ —É—Ç–≤–æ—Ä—é—é—Ç—å—Å—è –¥–æ–≤–≥–æ—Ç—Ä–∏–≤–∞–ª—ñ —Å–ø–æ–≥–∞–¥–∏.",
    "–û—á–∏—â—É–π —Ä–æ–±–æ—á–µ –º—ñ—Å—Ü–µ –ø–µ—Ä–µ–¥ –ø–æ—á–∞—Ç–∫–æ–º ‚Äî –ø–æ—Ä—è–¥–æ–∫ –Ω–∞–≤–∫–æ–ª–æ –¥–æ–ø–æ–º–∞–≥–∞—î –∑–æ—Å–µ—Ä–µ–¥–∏—Ç–∏—Å—å —ñ –≤–ø–æ—Ä—è–¥–∫–æ–≤—É—î –¥—É–º–∫–∏.",
    "–ù–µ –∑–∞–±—É–≤–∞–π –ø—Ä–æ –∑–¥–æ—Ä–æ–≤–∏–π —Å–æ–Ω ‚Äî –Ω–∞–≤—ñ—Ç—å –Ω–∞–π–∫—Ä–∞—â–µ –≤–∏–≤—á–µ–Ω–µ –≤–Ω–æ—á—ñ –∑–∞–±—É–≤–∞—î—Ç—å—Å—è, —è–∫—â–æ –æ—Ä–≥–∞–Ω—ñ–∑–º –≤–∏—Å–Ω–∞–∂–µ–Ω–∏–π.",
    "–ü–∏—à–∏ –∫–æ–Ω—Å–ø–µ–∫—Ç–∏ —Å–≤–æ—ó–º–∏ —Å–ª–æ–≤–∞–º–∏ ‚Äî —Ç–∞–∫ —Ç–∏ –∫—Ä–∞—â–µ –∑—Ä–æ–∑—É–º—ñ—î—à —Ç–µ–º—É –π –∑–º–æ–∂–µ—à —à–≤–∏–¥–∫–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç–∏ –æ—Å–Ω–æ–≤–Ω–µ.",
    "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–æ–ª—å–æ—Ä–æ–≤—ñ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è —á–∏ —Å—Ç—ñ–∫–µ—Ä–∏ ‚Äî —Ü–µ –¥–æ–ø–æ–º–∞–≥–∞—î —Å—Ç—Ä—É–∫—Ç—É—Ä—É–≤–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —Ç–∞ –∫—Ä–∞—â–µ –∑–∞–ø–∞–º'—è—Ç–∞—Ç–∏.",
    "–ù–∞–≤—á–∏—Å—è –∫–∞–∑–∞—Ç–∏ '–Ω—ñ' –∑–∞–π–≤–∏–º —Å–ø—Ä–∞–≤–∞–º ‚Äî —Ç–≤—ñ–π —á–∞—Å –æ–±–º–µ–∂–µ–Ω–∏–π, —Ç–æ–∂ –≤–∏—Ç—Ä–∞—á–∞–π –π–æ–≥–æ –Ω–∞ –≤–∞–∂–ª–∏–≤–µ.",
    "–°–ø—ñ–ª–∫—É–π—Å—è –∑ –æ–¥–Ω–æ–¥—É–º—Ü—è–º–∏ ‚Äî –Ω–∞–≤—á–∞–Ω–Ω—è –≤ –∫–æ–º–∞–Ω–¥—ñ —ñ–Ω–æ–¥—ñ –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—à–µ, –Ω—ñ–∂ –Ω–∞ —Å–∞–º–æ—Ç—ñ.",
    "–ù–µ –±—ñ–π—Å—è –ø–æ–º–∏–ª–æ–∫ ‚Äî –≤–æ–Ω–∏ —á–∞—Å—Ç–∏–Ω–∞ –Ω–∞–≤—á–∞–Ω–Ω—è. –ê–Ω–∞–ª—ñ–∑—É–π —ó—Ö —ñ –≤—á–∏—Å—è –Ω–∞ –Ω–∏—Ö.",
    "–†—É—Ö–∞–π—Å—è –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ—Ä–≤ ‚Äî –ø—Ä–æ–≥—É–ª—è–Ω–∫–∞ –∞–±–æ –ª–µ–≥–∫–∞ –∑–∞—Ä—è–¥–∫–∞ –æ—Å–≤—ñ–∂–∏—Ç—å –¥—É–º–∫–∏ —Ç–∞ –ø—ñ–¥–≤–∏—â–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å.",
    "–ü–∏—à–∏ —Å–æ–±—ñ –º–æ—Ç–∏–≤–∞—Ü—ñ–π–Ω—ñ –Ω–æ—Ç–∞—Ç–∫–∏ ‚Äî –∫–æ—Ä–æ—Ç–∫—ñ —Ñ—Ä–∞–∑–∏, —â–æ –Ω–∞–≥–∞–¥—É—é—Ç—å, —á–æ–º—É —Ç–∏ —Ü–µ —Ä–æ–±–∏—à.",
    "–•–∞—Ä—á—É–π—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ —Ç–∞ –∑–±–∞–ª–∞–Ω—Å–æ–≤–∞–Ω–æ ‚Äî –º–æ–∑–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–∞ –µ–Ω–µ—Ä–≥—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó.",
    "–ù–µ –∑–æ—Å–µ—Ä–µ–¥–∂—É–π—Å—è –ª–∏—à–µ –Ω–∞ –æ—Ü—ñ–Ω–∫–∞—Ö ‚Äî –≤–∞–∂–ª–∏–≤—ñ—à–µ —Ç–µ, —â–æ —Ç–∏ —Å–ø—Ä–∞–≤–¥—ñ –∑—Ä–æ–∑—É–º—ñ–≤ —ñ –∑–∞–ø–∞–º‚Äô—è—Ç–∞–≤.",
    "–ü–∞–º‚Äô—è—Ç–∞–π, —Ç–∏ –≤–∂–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —à–ª—è—Ö—É ‚Äî –∫–æ–∂–Ω–µ –∑—É—Å–∏–ª–ª—è –Ω–∞–±–ª–∏–∂–∞—î —Ç–µ–±–µ –¥–æ —Ü—ñ–ª—ñ, –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –æ–¥—Ä–∞–∑—É –ø–æ–º—ñ—Ç–Ω–∏–π."
]

def get_advice_keyboard():
    return ReplyKeyboardMarkup(
        [[KeyboardButton("–ù–∞–∑–∞–¥"), KeyboardButton(REPEAT_ADVICE_TEXT)]],
        resize_keyboard=True
    )

async def advice_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    try:
        text = update.message.text.strip()
        logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: '{text}'")

        if text in ["/advice", "üí° –ü–æ—Ä–∞–¥–∞", REPEAT_ADVICE_TEXT]:
            if not ADVICES:
                await update.message.reply_text("‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –ø–æ—Ä–∞–¥ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
                logger.warning("–ó–∞–ø–∏—Ç /advice, –∞–ª–µ —Å–ø–∏—Å–æ–∫ –ø–æ—Ä–∞–¥ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
                return

            advice = random.choice(ADVICES)
            await update.message.reply_text(f'‚ú® {advice}', reply_markup=get_advice_keyboard())
            logger.info("–ù–∞–¥—ñ—Å–ª–∞–Ω–æ –≤–∏–ø–∞–¥–∫–æ–≤—É –ø–æ—Ä–∞–¥—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É.")

        elif text == "–ù–∞–∑–∞–¥":
            await update.message.reply_text("–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é:", reply_markup=get_main_keyboard())
            logger.info("–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è —É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é.")

        else:
            logger.debug(f"–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π –≤–≤—ñ–¥ —É advice_handler: '{text}' ‚Äî —ñ–≥–Ω–æ—Ä—É—î—Ç—å—Å—è.")

    except Exception as e:
        logger.exception(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ advice_handler: {e}")
        await update.message.reply_text("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ—Ä–∞–¥–∏.")

def get_handler():
    return [
        CommandHandler("advice", advice_handler),
        MessageHandler(
            filters.TEXT & filters.Regex(rf"^(üí° –ü–æ—Ä–∞–¥–∞|{REPEAT_ADVICE_TEXT}|–ù–∞–∑–∞–¥|/advice)$"),
            advice_handler
        )
    ]
